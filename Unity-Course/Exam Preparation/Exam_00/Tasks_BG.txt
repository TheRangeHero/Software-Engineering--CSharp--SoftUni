Преди да започнете да решавате задачите, разгледайте внимателно написаните скриптове (компоненти) в папка "Assets/Scripts".
Ориентирайте се по сцените по кои gameObjects са закачени, какви са публичните полета, които са показани в Inspector прозореца, 
как компонентите си "комуникират" един с друг.
Намерете видео файла "Assets/SolvedExample.mkv" и вижте крайният резултат.
Това ще ви помогне да разберете и имплементирате по-лесно всички задачи.
Като предавате проекта си с решените задачи, премахнете видеото "Assets/SolvedExample.mkv" от папка "Assets". 
Архивирайте с "7Zip" или "WinRar" САМО папка "Assets" и я качете в СофтУни системата за предаване на изпита. 
Успех!

1. (10 точки) При натискане на Start бутона трябва да се зарежда следващата сцена "Assets/Scenes/MainScene.unity".
- Отворете сцената "Assets/Scenes/StartMenu.unity". 
- Намерете в йерархията бутона "Start".
- При натискане на EXIT GAME бутона, трябва да изпише в конзолата "Exit Game".

2. (20 точки) Имплементирайте функционалност, при натискане на бутони "Лява стрелка" и "дясна стрелка" на клавиатурата, 
да придвижва колата (Player обекта) наляво и надясно по улицата,
- Отворете сцената "Assets/Scenes/MainScene.unity". В йерархията намерете обекта който се казва "Player". Отворете компонент "PlayerMovement". 
- При натискане на бутон "Лява стрелка" на клавиатурата, предвижва колата (Player обекта) наляво по улицата докато неговата X позиция не достигне лимита "minX". 
- При натискане на бутон "Дясна стрелка" на клавиатурата, колата (Player обекта) се движи надясно, докато X позицията не достигне лимит "maxX". 
Използвайте "minX" и "maxX" полетата в скрипта, за да ограничите полето на движение наляво и надясно на Player обекта.

3. (10 точки) Имплементирайте функционалност, при умиране на Player, да се активира еднократно Crash Particle Effect.
- Намерете го в проекта на локация "Assets/ParticleEffects/Crash/CFXR Explosion 1.prefab".
- Закачете този prefab на колата (Player обекта).
- Използвайте компонента "Effects" за да имплементирате тази функционалност. Използвайте полето от тип ParticleSystem, което се казва "crashEffect".
- Оправете проблемите на всички gameObjects в този prefab с постоянно повтарящата се Particle System. Трябва да се пускат само един път.
- (Бонус 5 точки) За "разкачването" на скрипт "Player" и "Effects" компонентите, 
ползвайте типа UnityEvent. Когато Player умре, да извиква метод в Effects компонента, който да включи particle system само един път.

4. (10 точки) Имплементирайте функционалност, при умиране на Player, да се активира еднократно Crash Audio Effect.
- Сложете новата логика в "Effects" компонента.
- Използвайте полето AudioEffectSource с тип AudioSource
- Използвайте полето crashClip от тип AudioClip. Звукът е закачен към скрипта на компонента.
- Проверката дали Player e мъртъв е имплементирана, намерете я в "Player" компонента.
- (Бонус 5 точки) За "разкачването" на скрипт "Player" и "Effects" компонентите, 
ползвайте типа UnityEvent. Когато Player умре, да извиква метод в Effects компонента, който да изпълни аудио клипът само 1 път.

5. (30 точки) Имплементирайте функционалност, при удряне на препядствие да се чува еднократно звук. 
- Сложете новата логика в "Effects" компонента.
- Използвайте полето AudioEffectSource с тип AudioSource.
- Ако обекта, който Player e ударил, е бензинов варел (Assets/Prefabs/Obstacles/Barrel.prefab), използвайте AudioClip от полето "fuelGatherClip".
- За всеки друг ударен обект, използвайте AudioClip от полето "SqueakySound".
- (Бонус 5 точки) За "разкачването" на скрипт "ColliderDetector" и "Effects" компонентите, 
ползвайте типа FloatEvent имплементиран в скрипта "Assets/Scripts/MainScene/CustomEvents.cs". 
Когато "Player" компонент изпълнява event ъпдейтване на кръвта, да извиква метод в Effects компонента, който да изпълни аудио клипът само 1 път.

6. (20 точки) Имплементирайте функционалност, горе в левият ъгъл на екрана да се показва кръвта на "Player" с текстура.
- Направете промените от gameObject "Canvas/InGameUI/Health" в йерархията навътре.
- Сложете картинката "HUD_0" от Sprite sheet "Assets/SourceFiles/Textures/HUD.png" да бъде за background.
- Сложете картинката "HUD_1" от Sprite sheet "Assets/SourceFiles/Textures/HUD.png" да бъде за предна картинка, 
която ще "пълните" съдържанието й от скрипт "UI", закачен на "Canvas" в йерархията. Ползвайте полето "HealthFill".